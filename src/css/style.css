body, #result, .entry {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}

body, ul,
li, .entry p {
  margin: 0;
  padding: 0;
}

* {
  box-sizing: border-box;
}

ul,
li {
  list-style: none;
}

#search {
  border: 2px solid #808080;
  border-radius: .4em;
  margin-top: 1.61803em;
  max-width: 1100px;
  outline: none;
  padding: 1em;
  width: 60%;
}

@media (max-width: 968px) {
  #search {
    width: 75%;
  }
}

@media (max-width: 768px) {
  #search {
    width: 90%;
  }
}

#search:focus {
  box-shadow: 0 0 5px #911146;
}

#result {
  width: 100%;
}

.wiki-links {
  box-sizing: content-box;
  margin-bottom: 0.61803em;
  margin-top: 1em;
  padding-bottom: .2em;
}

.wiki-links:hover {
  cursor: pointer;
}

.entry {
  padding-top: 1.61803em;
  -webkit-transition: all .4s;
  transition: all .4s;
  width: 100%;
}

.entry:hover {
  box-shadow: inset 0 0 4em 1px rgba(0, 0, 0, 0.1);
}

.entry p {
  border-bottom: 1px #008080 solid;
  padding-bottom: 1em;
  padding-top: .5em;
  width: 60%;
  max-width: 1100px;
}

@media (max-width: 968px) {
  .entry p {
    width: 75%;
  }
}

@media (max-width: 768px) {
  .entry p {
    width: 90%;
  }
}

#headline {
  margin-top: 2.61803em;
}

body {
  font-family: "Open Sans", "Segoe UI", Candara, "Bitstream Vera Sans", "DejaVu Sans", "Bitstream Vera Sans", "Trebuchet MS", Verdana, "Verdana Ref", sans-serif;
  font-size: 1em;
  line-height: 1.61803em;
}

.wiki-links {
  font-size: 1.1em;
  color: #911146;
  text-decoration: none;
  -webkit-transition: all .3s;
  transition: all .3s;
}

@media (min-width: 20em) and (max-width: 60em) {
  .wiki-links {
    font-size: calc( 1.1em + 0.333 * ( ( 100vw - 20em) / 40 ));
  }
}

@media (min-width: 60em) {
  .wiki-links {
    font-size: 1.433em;
  }
}

.wiki-links:hover {
  color: #008080;
  box-shadow: 0 2px #911146;
}

#search {
  font-size: 1em;
  font-family: "Open Sans", "Segoe UI", Candara, "Bitstream Vera Sans", "DejaVu Sans", "Bitstream Vera Sans", "Trebuchet MS", Verdana, "Verdana Ref", sans-serif;
  text-align: center;
}

#headline {
  font-family: "EB Garamond", "Palatino Linotype", Palatino, Palladio, "URW Palladio L", "Book Antiqua", Baskerville, "Bookman Old Style", "Bitstream Charter", "Nimbus Roman No9 L", Garamond, "Apple Garamond", "ITC Garamond Narrow", "New Century Schoolbook", "Century Schoolbook", "Century Schoolbook L", Georgia, serif;
  font-size: 4.23607em;
  letter-spacing: -2px;
  color: #eee;
}

#headline:first-letter {
  font-size: 1.61803em;
  letter-spacing: -.1em;
}

#headline span {
  font-size: 0.38197em;
}

@media (max-width: 768px) {
  #headline {
    font-size: 2.61803em;
  }
}

/*# sourceMappingURL=data:application/json;base64, */